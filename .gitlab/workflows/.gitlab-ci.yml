image: golang:1.15.5

variables:
  PROJECT_NAME: "terraform-provider-atn"
  PKG : "github.com/allence-tunisie/$(PROJECT_NAME)"
  PKG_LIST : $(go list ${PKG}/... | grep -v /vendor/)
  GO_FILES : $(find . -name '*.go' | grep -v /vendor/ | grep -v _test.go)
cache:
  paths:
    - $GOPATH/go/src/github.com
    - $GOPATH/go/src/golang.org
    - $GOPATH/go/src/google.golang.org
    - $GOPATH/go/src/gopkg.in
stages:
  - test
  - build

before_script:
  - echo $GOPATH
  - cd /go && ls -l
  - chmod +x ./tools/coverage.sh
  - mkdir -p $GOPATH/go/src/github.com/allence-tunisie $(GOPATH)/go/src/_/builds
  - cp -r $CI_PROJECT_DIR $GOPATH/go/src/github.com/allence-tunisie/atn
  - ln -s $GOPATH/go/src/github.com/allence-tunisie $(GOPATH)/go/src/_/builds/allence-tunisie
  - go get -v -d ./...

unit_tests:
  stage: test
  tags:
    - aws-runner
  script:
    - go test -short ${PKG_LIST}

race_detector:
  stage: test
  tags:
    - aws-runner
  script:
    - go test -race -short ${PKG_LIST}

memory_sanitizer:
  stage: test
  tags:
    - aws-runner
  script:
    - go test -msan -short ${PKG_LIST}

code_coverage:
  stage: test
  tags:
    - aws-runner
  script:
    - ./tools/coverage.sh

code_coverage_report:
  stage: test
  tags:
    - aws-runner
  script:
    - ./tools/coverage.sh html
  only:
    - master

lint_code:
  stage: test
  tags:
    - aws-runner
  script:
    - golint -set_exit_status ${PKG_LIST}

build:
  stage: build
  tags:
    - aws-runner
  script:
    - go build -i -v $(PKG)